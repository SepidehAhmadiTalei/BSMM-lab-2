---
title: "BSMM-lab-2"
subtitle: "BSMM 8740 Fall 2023"
author: "Sepideh AhmadiTalei"
date: "September 28, 2023"
format: html
editor: visual
self-contained: true
---

## Setup

Load packages and data:

```{r load-pkg}

install.packages("magrittr")
install.packages("tidyverse")
install.packages("tidymodels")
install.packages("gt")
install.packages("gtExtras")
install.packages("DataExplorer")

library(magrittr)     # the pipe
library(tidyverse)    # for data wrangling + visualization
library(tidymodels)   # for modeling
library(gt)           # for making display tables
library(gtExtras)     # helper functions for beautiful tables
library(DataExplorer) #
```

```{r load-pkg-data}
#| message: false
the_tate <- readr::read_delim("data/the-tate-collection.csv", ";", escape_double = FALSE, trim_ws = TRUE)
the_tate_artists <- readr::read_csv("data/the-tate-artists.csv")
```

## Exercises

### Exercise 1

```{r Summarize data}
the_tate |>
  dplyr::summarize(
    artist = length(unique(artist)),  
    min_year = min(year, na.rm = TRUE), 
    max_year = max(year, na.rm = TRUE),
    min_acquisitionYear = min(acquisitionYear, na.rm = TRUE),  
    max_acquisitionYear = max(acquisitionYear, na.rm = TRUE),  
  )
```

The `the_tate` dataset has \_*3336*\_ unique artists who worked from \_*1545*\_ to \_*2012*\_. The works were acquired between the years \_*1823*\_ and \_*2013*\_.

### Exercise 2

```{r Missing data}
the_tate |>
  DataExplorer::introduce()
```

```{r}
the_tate |>
  DataExplorer::plot_missing()
```

```{r Number of works with missing date / wih or without Title}
the_tate |>
  dplyr::filter(is.na(year)) |>
  nrow()
```

```{r Number of works with missing date / by Title}
the_tate |>
  dplyr::filter(is.na(year)) |>
    dplyr::distinct(title)

```

```{r Number of works with missing date / by Artist}
the_tate |>
  dplyr::filter(is.na(year)) |>
  dplyr::distinct(artist)
```

```{r Number of works with missing date / by Artist}
tate_summary <- the_tate |>
  dplyr::filter(is.na(year)) |>
  dplyr::group_by(artist) |>
  dplyr:: summarise(
    Number_of_missing = sum(is.na(year))
    )  |>
  dplyr::arrange(desc(Number_of_missing))

tate_summary

```

```{r percentage and Cumulative percentage of missing date for each artist}

tate_summary_per <- tate_summary |>
   dplyr::mutate(percentage = (Number_of_missing*100)/5397)|>
   dplyr::mutate(Cum_percentage = cumsum(percentage)) 

 tate_summary_per
```

```{r Minimum number of artists required to resolve at least 50% of the missing date}

Minimum_number_artists <- min(which(tate_summary_per $Cum_percentage  >= 50))

Minimum_number_artists
```

How number of works with missing dates is \_*5397*\_.

The number of artists whose works have missing dates is \_*461*\_.

It would require resolving missing year data for only \_11\_ artists resolve resolve at least 50% of the missing data.

The missing year data likely to be classified as \_MAR\_.

### Exercise 3

```{r Ordering artists by number of works}
the_tate |>
  dplyr::group_by(artist) |>
  dplyr::mutate(number_of_works=n()) |>
  dplyr::select(artist,number_of_works) |>
  dplyr::arrange(desc(number_of_works)) |>
  dplyr::distinct() |>
  dplyr::ungroup() |>
  dplyr::slice(c(1:10)
  )
```

The artist with the most works in the Tate collection is \_*Turner, Joseph Mallord*\_.

The artist with the tenth-most works in the Tate collection is \_*Warhol, Andy*\_.

### Exercise 4

```{r Calculation of percentage of works of artists}
artists_per <- the_tate |>
  dplyr::group_by(artist) |>
  dplyr::mutate(number_of_works=n()) |>
  dplyr::select(artist,number_of_works) |>
  dplyr::arrange(desc(number_of_works)) |>
  dplyr::distinct() |>
  dplyr::ungroup() |>
  dplyr::mutate(work_percentage = ((number_of_works*100)/69201))

artists_per
```

The artist with the greatest number of works in the Tate collection represent \_56.92% of the total number of works

### Exercise 5

```{r Duplicate artist-title pairs}

total_works <- nrow(the_tate)
distinct_artist_title_pair <- the_tate %>% 
  select(artist,title) %>% 
  distinct()
distinct_count <- nrow(distinct_artist_title_pair)
duplicate_count <- total_works - distinct_count

duplicate_count
```

There are \_*23705*\_ duplicate artist-title pairs

### Exercise 6

```{r Sorting based on the area of artworks}
artworks_area <- the_tate |>
  dplyr::mutate(area=width * height) |>
  dplyr:: select(artist, title, area) %>%
drop_na 
```

```{r}
artworks_area  |>
  dplyr::arrange(desc(area)) 


```

```{r The largest artwork in the collection}
largest_artwork <- artworks_area %>%
  slice_head(n = 1)
largest_artwork
```

```{r The smallest artwork in the collection}
smallest_artwork <- artworks_area %>%
  slice_tail(n = 1)
smallest_artwork
```

The artist with the largest work in the tate collection is *Charlton, Alan*.

The artist with the smallest work in the collection is *Flaxman, John*. The smallest work has area *26666* \$\\text{cm}\^2\$

$\text{cm}^2$

### Exercise 7

```{r Left join }
the_tate <- left_join(the_tate, the_tate_artists, by = c("artist" = "name"))

```

```{r}
the_tate <- the_tate %>%
  filter(!is.na(gender))
```

```{r}
resulting_table <- the_tate %>%
  group_by(gender) %>%
  summarise(count = n())
```

```{r}
resulting_table
```

### Exercise 8

```{r}
dataofstock <- read_csv("data/SPX_HistoricalData_1692322132002.csv")
View(dataofstock)
```

```{r}
dataofstock <- dataofstock %>%
  mutate(Year = lubridate::year(as.Date(Date, format = "%m/%d/%Y")))


dataofstock <- dataofstock %>%
  rename("close"=`Close/Last`)

dataofstock <- dataofstock %>%
  mutate(rd = log(lead(close) / close))


dataofstock <- dataofstock %>%
  mutate(vard = rd^2)

summary_data <- dataofstock %>%
  group_by(Year) %>%
  summarize(
    Annual_Return = (exp(sum(rd, na.rm = TRUE)) - 1)*100,
    Annual_StdDev = sqrt(sum(vard, na.rm = TRUE))*100,
    .groups = "drop"  # Drop grouping after summary
  )

summary_data

```

The annual return in the SPX price in 2020 was -13.98%.

The corresponding price volatility was 34.70%.

### Exercise 9

```{r Calculate the period volatility as the standard deviation of annual returns}
period_volatility <- sd(summary_data$Annual_Return)

period_volatility

cat("The period volatility was:",period_volatility, "%\n")

```

The period volatility was 19.51%

### 
